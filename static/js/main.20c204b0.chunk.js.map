{"version":3,"sources":["components/PersonList/PersonList.tsx","data/people.ts","App.tsx","index.tsx"],"names":["PersonList","React","memo","_ref","persons","onSelect","_jsx","_Fragment","children","length","map","person","className","classNames","sex","onClick","style","cursor","name","slug","peopleFromServer","born","died","fatherName","motherName","App","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","appliedQuery","setAppliedQuery","_useState5","_useState6","selectedPerson","setSelectedPerson","_useState7","_useState8","isPersonListActive","setIsPersonListActive","applyQuery","useCallback","debounce","filteredPersons","useMemo","filter","toLowerCase","includes","trim","_jsxs","concat","type","placeholder","value","onChange","event","target","role","ReactDOM","render","document","getElementById"],"mappings":"uPASaA,EAA8BC,IAAMC,MAC/C,SAAAC,GAA4B,IAAzBC,EAAOD,EAAPC,QAASC,EAAQF,EAARE,SACV,OACEC,cAAAC,WAAA,CAAAC,SACsB,IAAnBJ,EAAQK,OACPL,EAAQM,KAAI,SAAAC,GAAM,OAChBL,cAAA,OACEM,UAAU,gBAAeJ,SAGzBF,cAAA,MACEM,UAAWC,IACT,gBACA,CACE,kBAAkC,MAAfF,EAAOG,MAG9BC,QAAS,kBAAMV,EAASM,EAAO,EAACH,SAEhCF,cAAA,KAAGU,MAAO,CAAEC,OAAQ,WAAYT,SAC7BG,EAAOO,UAZPP,EAAOQ,KAeR,IAGRb,cAAA,OAAKM,UAAU,gBAAeJ,SAC5BF,cAAA,KAAGM,UAAU,gCAA+BJ,SAAC,+BAOvD,ICzCWY,EAA6B,CACxC,CACEF,KAAM,oBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZL,KAAM,0BAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,iBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZL,KAAM,uBAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZL,KAAM,wBAER,CACED,KAAM,sBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,4BAER,CACED,KAAM,wBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,wBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZL,KAAM,wBAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZL,KAAM,wBAER,CACED,KAAM,wBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZL,KAAM,8BAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZL,KAAM,yBAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,2BACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZL,KAAM,iCAER,CACED,KAAM,uBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACED,KAAM,wBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,0BACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACED,KAAM,oBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,sBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,gBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACED,KAAM,2BACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACED,KAAM,iBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACED,KAAM,iBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACED,KAAM,yBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACED,KAAM,uBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACED,KAAM,iBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACED,KAAM,sBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,kBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACED,KAAM,mBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACED,KAAM,gBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACED,KAAM,iBACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACED,KAAM,cACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACED,KAAM,gCACNJ,IAAK,IACLO,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCCxVGM,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,EAA4CT,mBAAwB,MAAKU,EAAAR,YAAAO,EAAA,GAAlEE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCG,EAAoDb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE1CG,EAAaC,sBACjBC,IAASX,EAAiB,KAC1B,IAcIY,EAAkBC,mBAAQ,WAU9B,OATAL,IAAwBT,GAEpBA,EACFS,GAAsB,IAEtBJ,EAAkB,MAClBI,GAAsB,IAGjBvB,EAAiB6B,QACtB,SAAAtC,GAAM,OAAIA,EAAOO,KAAKgC,cACnBC,SAASjB,EAAakB,OAAOF,cAAc,GAElD,GAAG,CAAChB,EAAcd,IAElB,OACEiC,eAAA,QAAMzC,UAAU,UAASJ,SAAA,CACvBF,cAAA,MAAIM,UAAU,QAAOJ,SAClB8B,EAAc,GAAAgB,OAAMhB,EAAepB,KAAI,MAAAoC,OAAKhB,EAAejB,KAAI,OAAAiC,OAAMhB,EAAehB,KAAI,KAAM,uBAGjG+B,eAAA,OAAKzC,UAAWC,IACd,WACA,CAAE,YAAa6B,IACflC,SAAA,CAEAF,cAAA,OAAKM,UAAU,mBAAkBJ,SAC/BF,cAAA,SACEiD,KAAK,OACLC,YAAY,2BACZ5C,UAAU,QACV6C,MAAO3B,EACP4B,SA5CgB,SAACC,GACzB5B,EAAS4B,EAAMC,OAAOH,OACtBb,EAAWe,EAAMC,OAAOH,MAC1B,MA6CMnD,cAAA,OAAKM,UAAU,gBAAgBiD,KAAK,OAAMrD,SACxCF,cAAA,OAAKM,UAAU,mBAAkBJ,SAC/BF,cAACN,EAAU,CACTI,QAAS2C,EACT1C,SA/CQ,SAACM,GACnB4B,EAAkB5B,GAClBoB,EAASpB,EAAOO,MAChByB,GAAsB,EACxB,aAkDF,EC5EAmB,IAASC,OAAOzD,cAACmB,EAAG,IAAKuC,SAASC,eAAe,Q","file":"static/js/main.20c204b0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  persons: Person[],\n  onSelect: (person: Person) => void,\n};\n\nexport const PersonList: React.FC<Props> = React.memo(\n  ({ persons, onSelect }) => {\n    return (\n      <>\n        {persons.length !== 0 ? (\n          persons.map(person => (\n            <div\n              className=\"dropdown-item\"\n              key={person.slug}\n            >\n              <tr\n                className={classNames(\n                  'has-text-link',\n                  {\n                    'has-text-danger': person.sex === 'f',\n                  },\n                )}\n                onClick={() => onSelect(person)}\n              >\n                <p style={{ cursor: 'pointer' }}>\n                  {person.name}\n                </p>\n              </tr>\n            </div>\n          ))\n        ) : (\n          <div className=\"dropdown-item\">\n            <p className=\"has-text-link has-text-danger\">\n              No matching suggestions\n            </p>\n          </div>\n        )}\n      </>\n    );\n  },\n);\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useCallback, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport './App.scss';\nimport { PersonList } from './components/PersonList/PersonList';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n  const [isPersonListActive, setIsPersonListActive] = useState(false);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleClick = (person: Person) => {\n    setSelectedPerson(person);\n    setQuery(person.name);\n    setIsPersonListActive(false);\n  };\n\n  const filteredPersons = useMemo(() => {\n    setIsPersonListActive(!!appliedQuery);\n\n    if (appliedQuery) {\n      setIsPersonListActive(true);\n    } else {\n      setSelectedPerson(null);\n      setIsPersonListActive(false);\n    }\n\n    return peopleFromServer.filter(\n      person => person.name.toLowerCase()\n        .includes(appliedQuery.trim().toLowerCase()),\n    );\n  }, [appliedQuery, peopleFromServer]);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson ? `${selectedPerson.name} (${selectedPerson.born} = ${selectedPerson.died})` : 'No selected person'}\n      </h1>\n\n      <div className={classNames(\n        'dropdown',\n        { 'is-active': isPersonListActive },\n      )}\n      >\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n        </div>\n\n        <div className=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            <PersonList\n              persons={filteredPersons}\n              onSelect={handleClick}\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}